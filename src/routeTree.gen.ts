/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as ProjectsRouteImport } from './routes/projects'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AboutRouteImport } from './routes/about'
import { Route as ProjectIdRouteImport } from './routes/$projectId'
import { Route as IndexRouteImport } from './routes/index'

const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsRoute = ProjectsRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectIdRoute = ProjectIdRouteImport.update({
  id: '/$projectId',
  path: '/$projectId',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$projectId': typeof ProjectIdRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/projects': typeof ProjectsRoute
  '/register': typeof RegisterRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$projectId': typeof ProjectIdRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/projects': typeof ProjectsRoute
  '/register': typeof RegisterRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$projectId': typeof ProjectIdRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/projects': typeof ProjectsRoute
  '/register': typeof RegisterRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$projectId'
    | '/about'
    | '/login'
    | '/projects'
    | '/register'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/$projectId' | '/about' | '/login' | '/projects' | '/register'
  id:
    | '__root__'
    | '/'
    | '/$projectId'
    | '/about'
    | '/login'
    | '/projects'
    | '/register'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProjectIdRoute: typeof ProjectIdRoute
  AboutRoute: typeof AboutRoute
  LoginRoute: typeof LoginRoute
  ProjectsRoute: typeof ProjectsRoute
  RegisterRoute: typeof RegisterRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$projectId': {
      id: '/$projectId'
      path: '/$projectId'
      fullPath: '/$projectId'
      preLoaderRoute: typeof ProjectIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects': {
      id: '/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

declare module './routes/index' {
  const createFileRoute: CreateFileRoute<
    '/',
    FileRoutesByPath['/']['parentRoute'],
    FileRoutesByPath['/']['id'],
    FileRoutesByPath['/']['path'],
    FileRoutesByPath['/']['fullPath']
  >
}
declare module './routes/$projectId' {
  const createFileRoute: CreateFileRoute<
    '/$projectId',
    FileRoutesByPath['/$projectId']['parentRoute'],
    FileRoutesByPath['/$projectId']['id'],
    FileRoutesByPath['/$projectId']['path'],
    FileRoutesByPath['/$projectId']['fullPath']
  >
}
declare module './routes/about' {
  const createFileRoute: CreateFileRoute<
    '/about',
    FileRoutesByPath['/about']['parentRoute'],
    FileRoutesByPath['/about']['id'],
    FileRoutesByPath['/about']['path'],
    FileRoutesByPath['/about']['fullPath']
  >
}
declare module './routes/login' {
  const createFileRoute: CreateFileRoute<
    '/login',
    FileRoutesByPath['/login']['parentRoute'],
    FileRoutesByPath['/login']['id'],
    FileRoutesByPath['/login']['path'],
    FileRoutesByPath['/login']['fullPath']
  >
}
declare module './routes/projects' {
  const createFileRoute: CreateFileRoute<
    '/projects',
    FileRoutesByPath['/projects']['parentRoute'],
    FileRoutesByPath['/projects']['id'],
    FileRoutesByPath['/projects']['path'],
    FileRoutesByPath['/projects']['fullPath']
  >
}
declare module './routes/register' {
  const createFileRoute: CreateFileRoute<
    '/register',
    FileRoutesByPath['/register']['parentRoute'],
    FileRoutesByPath['/register']['id'],
    FileRoutesByPath['/register']['path'],
    FileRoutesByPath['/register']['fullPath']
  >
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProjectIdRoute: ProjectIdRoute,
  AboutRoute: AboutRoute,
  LoginRoute: LoginRoute,
  ProjectsRoute: ProjectsRoute,
  RegisterRoute: RegisterRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
